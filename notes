high-level design
-----------------

* Input:
*   Maxiuno/arduino object to grab input from arduino. Save the settings
*     somehow?
*   Subpatches to convert each analog input to corresponding MIDI notes, each
*     hardcoded (with easy user control) to MIDI notes that play well with the
*     ableton sampler. Hardware control for octave up/down
*   Subpatches use the [send] object for outputting their values to avoid cable
*     clutter -- ALSO send digital(?) values for start/stop/record/octave settings
*
*
* Loopers:
*   use [receive] to grab MIDI notes
*   Quantization:
*     Hitting 'start', 'stop', 'record', etc. should be synced up to a master
*     clock of arbitrary tempo; when the user hits one of these controls, they
*     only take effect on the next synced beat
*

implementation notes
--------------------

* Input:
*
* Loopers:
*   hitting 'stop' after 'record' should bang 'start'
*   hitting 'stop' after 'start' should stop the loop
*   Overdubbing:
*     hitting 'record' while the loop is playing should overdub somehow
*     bypass control so that when 'overdub' is on, notes are added to the
*       stream, and when 'overdub' is off, notes go straight to midiout
